{"ast":null,"code":"import _slicedToArray from \"D:\\\\shrouk 25-10-2022\\\\Shrouk\\\\WEB\\\\REACT\\\\food-order-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\shrouk 25-10-2022\\\\Shrouk\\\\WEB\\\\REACT\\\\food-order-app\\\\src\\\\components\\\\Cart\\\\Checkout.js\";\nimport React, { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nvar isEmpty = function isEmpty(value) {\n  return value.trim() !== 0;\n};\nvar isFiveChar = function isFiveChar(value) {\n  return value.trim().length === 5;\n};\nvar Checkout = function Checkout(props) {\n  var _useState = useState({\n      name: true,\n      street: true,\n      postalcode: true,\n      city: true\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    formInputValidity = _useState2[0],\n    setFormInputValidity = _useState2[1];\n  var nameInput = useRef();\n  var streetInput = useRef();\n  var postalCodeInput = useRef();\n  var cityInput = useRef();\n  var confirmHandler = function confirmHandler(event) {\n    event.preventDefault();\n    var enteredName = nameInput.current.value;\n    var enteredStreet = streetInput.current.value;\n    var enteredPostalCode = postalCodeInput.current.value;\n    var enteredCity = cityInput.current.value;\n    var enteredNameIsvalid = !isEmpty(enteredName);\n    var enteredStreetIsValid = !isEmpty(enteredStreet);\n    var enteredPostalCodeisValid = !isFiveChar(enteredPostalCode);\n    var enteredCityIsValid = !isEmpty(enteredCity);\n    setFormInputValidity({\n      name: enteredNameIsvalid,\n      street: enteredStreetIsValid,\n      postalcode: enteredPostalCodeisValid,\n      city: enteredCityIsValid\n    });\n    console.log(formInputValidity);\n    var formIsValid = enteredNameIsvalid && enteredPostalCodeisValid && enteredStreetIsValid && enteredCityIsValid;\n    if (!formIsValid) {\n      return;\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(classes.control, \" \").concat(formInputValidity.name ? '' : classes.invalid),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Your Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    ref: nameInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), !formInputValidity.name && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }, \"Name Shouldn't Be Empty\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(classes.control, \" \").concat(formInputValidity.street ? '' : classes.invalid),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"street\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Street\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"street\",\n    ref: streetInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), !formInputValidity.street && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 39\n    }\n  }, \"Street Shouldn't Be Empty\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(classes.control, \" \").concat(formInputValidity.postalcode ? '' : classes.invalid),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"postal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Postal Code\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"postal\",\n    ref: postalCodeInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), !formInputValidity.postalcode && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 43\n    }\n  }, \"Postal code Shouldn't Be Empty\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(classes.control, \" \").concat(formInputValidity.city ? '' : classes.invalid),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"city\",\n    ref: cityInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), !formInputValidity.city && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 37\n    }\n  }, \"City Shouldn't Be Empty\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: props.onCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: classes.submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Confirm\")));\n};\nexport default Checkout;","map":{"version":3,"names":["React","useRef","useState","classes","isEmpty","value","trim","isFiveChar","length","Checkout","props","_useState","name","street","postalcode","city","_useState2","_slicedToArray","formInputValidity","setFormInputValidity","nameInput","streetInput","postalCodeInput","cityInput","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsvalid","enteredStreetIsValid","enteredPostalCodeisValid","enteredCityIsValid","console","log","formIsValid","createElement","className","form","onSubmit","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","concat","control","invalid","htmlFor","type","id","ref","actions","onClick","onCancel","submit"],"sources":["D:/shrouk 25-10-2022/Shrouk/WEB/REACT/food-order-app/src/components/Cart/Checkout.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\n\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty = value => value.trim() !== 0;\r\nconst isFiveChar = value => value.trim().length === 5;\r\n\r\n\r\nconst Checkout = (props) => {\r\n\r\n    const [formInputValidity, setFormInputValidity] = useState({\r\n        name:true,\r\n        street: true,\r\n        postalcode: true,\r\n        city:true\r\n    });\r\n    \r\n    const nameInput = useRef();\r\n    const streetInput = useRef();\r\n    const postalCodeInput = useRef();\r\n    const cityInput = useRef();\r\n\r\n    const confirmHandler = (event) => {\r\n        event.preventDefault();\r\n        const enteredName = nameInput.current.value;\r\n        const enteredStreet = streetInput.current.value;\r\n        const enteredPostalCode = postalCodeInput.current.value;\r\n        const enteredCity = cityInput.current.value;\r\n\r\n        const enteredNameIsvalid = !isEmpty(enteredName);\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n        const enteredPostalCodeisValid =!isFiveChar(enteredPostalCode);\r\n        const enteredCityIsValid = !isEmpty(enteredCity);\r\n\r\n        setFormInputValidity({\r\n            name:enteredNameIsvalid,\r\n            street:enteredStreetIsValid ,\r\n            postalcode:enteredPostalCodeisValid,\r\n            city:enteredCityIsValid\r\n        })\r\n        console.log(formInputValidity)\r\n         const formIsValid = enteredNameIsvalid && enteredPostalCodeisValid && enteredStreetIsValid && enteredCityIsValid;\r\n\r\n        if(!formIsValid){\r\n            return ;\r\n        } \r\n\r\n    };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={`${classes.control} ${formInputValidity.name? '' : classes.invalid}`}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' ref={nameInput}/>\r\n        {!formInputValidity.name && <p>Name Shouldn't Be Empty</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputValidity.street? '' : classes.invalid}`}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetInput}/>\r\n        {!formInputValidity.street && <p>Street Shouldn't Be Empty</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputValidity.postalcode? '' : classes.invalid}`}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalCodeInput}/>\r\n        {!formInputValidity.postalcode && <p>Postal code Shouldn't Be Empty</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputValidity.city? '' : classes.invalid}`}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityInput}/>\r\n        {!formInputValidity.city && <p>City Shouldn't Be Empty</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type='submit' className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}