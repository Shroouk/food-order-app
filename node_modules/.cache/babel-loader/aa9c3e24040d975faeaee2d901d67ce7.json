{"ast":null,"code":"import _slicedToArray from \"D:\\\\shrouk 25-10-2022\\\\Shrouk\\\\WEB\\\\REACT\\\\food-order-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"D:\\\\shrouk 25-10-2022\\\\Shrouk\\\\WEB\\\\REACT\\\\food-order-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\shrouk 25-10-2022\\\\Shrouk\\\\WEB\\\\REACT\\\\food-order-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\shrouk 25-10-2022\\\\Shrouk\\\\WEB\\\\REACT\\\\food-order-app\\\\src\\\\store\\\\CartProvider.js\";\nimport React from 'react';\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nvar defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nvar cartReducer = function cartReducer(state, action) {\n  if (action.type === 'ADD') {\n    var updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    var existingCartItemIndex = state.items.findIndex(function (item) {\n      return item.id === action.item.id;\n    });\n    var existingCartItem = state.items[existingCartItemIndex];\n    var updatedItems;\n    if (existingCartItem) {\n      var updatedItem = _objectSpread({}, existingCartItem, {\n        amount: existingCartItem.amount + action.item.amount\n      });\n      updatedItems = _toConsumableArray(state.items);\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === 'REMOVE') {\n    var _existingCartItemIndex = state.items.findIndex(function (item) {\n      return item.id === action.id;\n    });\n    var existingItem = state.items[_existingCartItemIndex];\n    var _updatedTotalAmount = state.totalAmount - existingItem.price;\n    var _updatedItems;\n    if (existingItem.amount === 1) {\n      _updatedItems = state.items.filter(function (item) {\n        return item.id !== action.id;\n      });\n    } else {\n      var _updatedItem = _objectSpread({}, existingItem, {\n        amount: existingItem.amount - 1\n      });\n      _updatedItems = _toConsumableArray(state.items);\n      _updatedItems[_existingCartItemIndex] = _updatedItem;\n    }\n    return {\n      items: _updatedItems,\n      totalAmount: _updatedTotalAmount\n    };\n  }\n  if (action.type === 'CLEAR') {\n    return defaultCartState;\n  }\n  return defaultCartState;\n};\nvar CartProvider = function CartProvider(props) {\n  var _useReducer = useReducer(cartReducer, defaultCartState),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    cartState = _useReducer2[0],\n    dispatchCartAction = _useReducer2[1];\n  var addItemToCartHandler = function addItemToCartHandler(item) {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  var removeItemFromCartHandler = function removeItemFromCartHandler(id) {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  var clearCartHandler = function clearCartHandler() {\n    dispatchCartAction({\n      type: 'CLEAR'\n    });\n  };\n  var cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    clearCart: clearCartHandler\n  };\n  return /*#__PURE__*/React.createElement(CartContext.Provider, {\n    value: cartContext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport default CartProvider;","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","_objectSpread","_toConsumableArray","concat","existingItem","filter","CartProvider","props","_useReducer","_useReducer2","_slicedToArray","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","clearCartHandler","cartContext","addItem","removeItem","clearCart","createElement","Provider","value","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","children"],"sources":["D:/shrouk 25-10-2022/Shrouk/WEB/REACT/food-order-app/src/store/CartProvider.js"],"sourcesContent":["import React from 'react'\n\nimport { useReducer } from 'react';\n\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if(action.type === 'CLEAR'){\n    return defaultCartState\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: 'ADD', item: item });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: 'REMOVE', id: id });\n  };\n\n\n  const clearCartHandler = ()=>{\n    dispatchCartAction({type: 'CLEAR'})\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    clearCart: clearCartHandler\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}